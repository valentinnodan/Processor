import java.util.List;

public interface Processor<T> {


    /**
     * @return processor id, immutable, unique among all instances, not null
     */

    String getId();


    /**
     * @return a list of processors that have to be executed before this one
     * <p>
     * and whose results must be passed to Processor::process,
     * <p>
     * immutable, can be null or empty, both means no inputs
     */

    List<String> getInputIds();


    /**
     * @param input outputs of the processors whose ids are returned by Processor::getInputIds, not null, but can be empty
     * @return output of the processing, null if no output is produced
     * @throws ProcessorException if error occurs during processing
     */

    T process(List<T> input) throws ProcessorException;

}



/*
Реализация должна удовлетворять следующим требованиям:

- задача метода runProcessors – запускать весь набор «процессоров» в несколько итераций (не более maxIterations) и возвратить список результатов каждого для всех полных итераций;

- в рамках каждой итерации ни один «процессор» не запускается пока не будут запущены все те, что соответствуют его input ids;

- некоторые «процессоры» возвращают пустые списки input ids, они являются источником данных и могут запускаться сразу;

- «процессоры» могут (и должны) выполняться в несколько потоков, но не более чем maxThreads;

- в каждой итерации каждый «процессор» запускается ровно один раз;

- может запускаться больше одной итерации одновременно, но ни один «процессор» не может запускаться параллельно самому себе;

- последовательность итераций для каждого «процессора» должна соблюдаться, то есть он не может быть запущен в итерации, если еще не завершился в предыдущей;
- если хоть один «процессор» кидает исключение, все остальные потоки должны прерываться и runProcessors тоже должен кидать исключение;
- также runProcessors должен кидать исключение, если граф зависимостей содержит циклы или неизвестные input ids

- если хоть один «процессор» возвращает null, результаты этой и всех последующих (если они уже запущены) итераций должны игнорироваться и runProcessors должен возвращать результат всех предыдущих итераций;


Очень бы хотелось, чтобы при решении использовались лишь стандартные библиотеки Java (или Kotlin).

Большая просьба: прислать мне результат в виде проекта (gradle, maven, idea etc.) в zip-файле по емейлу.
В идеале было бы получить его до среды 15 апреля включительно. Понимаю, что времени мало, и прошу меня за это простить.
В случае если времени не будет хватать, я бы предпочел получить работающее решение с описанием того, что не доделано

и как это предполагалось сделать, чем получить решение на неделю позже или получить много неработающего кода.


Если решишь задания не делать – дай знать как можно раньше, пожалуйста.

Ещё просьба: задание новое, поэтому если ты заметишь в нём какие-то ошибки или несоответствия (или просто что-то окажется непонятным) – тоже напиши ASAP.

*/